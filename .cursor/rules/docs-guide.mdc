---
description: 文档书写规范
globs: 
alwaysApply: false
---
# 文档书写规范

为保持项目文档的一致性和可读性，请遵循以下文档书写规范。


## Markdown 格式规范

### 标题层级

- 使用 `#` 作为文档的主标题
- 使用 `##` 作为主要章节
- 使用 `###` 作为子章节
- 使用 `####` 作为小节
- 不要跳过标题层级
- 不要超过四级标题

### 列表

- 无序列表使用 `-` 开头
- 有序列表使用 `1.`, `2.` 等数字开头
- 列表嵌套时，使用四个空格缩进

### 代码块

- 使用三个反引号 (```) 包裹代码块
- 指定语言以启用语法高亮
- 内联代码使用单个反引号 (`) 包裹
- 代码块过长时使用可点击收起的方式，防止影响阅读体验

```javascript
// 这是一个 JavaScript 代码块示例
function example() {
  console.log('Hello, world!');
}
```

### 表格

使用标准 Markdown 表格语法，保持列对齐：

```
| 名称 | 类型 | 默认值 | 描述 |
|------|------|--------|------|
| port | number | 3000 | 服务器端口 |
| debug | boolean | false | 是否启用调试模式 |
```

### 链接
- 使用相对路径链接到项目内的其他文档
- **图片**：如需使用图片，将其放在 `docs/images/` 目录下，使用相对路径引用

### 中英文排版
- 中英文字符间增加一个半角空白。
- 特殊的，日期可以指定不添加空白。
- 中文前后的半角标点转成全角标点。
- 全角英文、数字转成半角字符。
- 连续的句号自动转省略号。
- 感叹号、问号最多允许连续重复 3 次。
- 其他中文标点符号不允许重复出现。
- 剔除不可见空白

## 风格指南
1. **语言**：使用中文编写文档
2. **语气**：使用直接、简洁的语气
3. **专业术语**：保持专业术语的一致性，首次出现时可提供解释
4. **句式简洁**：每个句子都剥干净，减弱句子力度的累赘物。比如无用的词、可被简化的词、已由动词表达其义的副词、要让读者猜测施动者的被动结构
5. **优先短句**：少写长句，将长句拆成多个短句，减少阅读的心智负担

示例：
### 删除不必要的代称
```md
<!-- ❌ 错误示例 -->
周末和朋友粥粥吃饭，他跟我说，最近因为遭遇单位降薪调岗，所以心情很差。

<!-- ✅ 正确示例 -->
周末和朋友粥粥吃饭，他说，最近因为遭遇单位降薪调岗，所以心情很差。
```

### 删掉不必要的因果词
```md
<!-- ❌ 错误示例 -->
他们吃完饭后去打球了，我没有去，因为我头晕。

<!-- ✅ 正确示例 -->
他们吃完饭后去打球了，我头晕，没去。
```

### 多删一点“的”“是”“了”
```md
<!-- ❌ 错误示例 -->
但这种员工，即便是跳槽到了别家单位，问题依然不会少。

<!-- ✅ 正确示例 -->
但这种员工，即便跳槽到别家单位，问题依然不会少。
```

### 删掉累赘词
```md
<!-- ❌ 错误示例 -->
前段时间因为采访的缘故，我认识了一个名叫粥粥的餐厅店长。

<!-- ✅ 正确示例 -->
前段时间采访，我认识了个餐厅店长，叫粥粥。
```

## 文档更新

1. 当代码发生变更时，同步更新相关文档
2. 在文档顶部添加最后更新日期
3. 在涉及版本特定功能时，明确标注版本信息
4. 重大变更应在文档中使用警告框标注：

```md
> **注意**：自 v2.0.0 起，此 API 已更改行为。
```


## 检查清单

发布文档前请检查：

- [ ] 文档内容是否准确反映当前代码
- [ ] 是否遵循了上述格式规范
- [ ] 代码示例是否可以直接运行
- [ ] 拼写和语法是否正确
- [ ] 链接是否有效

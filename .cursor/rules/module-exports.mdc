---
description: 
globs: *.js,*.jsx,*.ts,*.tsx
alwaysApply: false
---
# 模块导出规范

## 导出方式

【必须】遵循：
- **优先使用命名导出**，特别是组件，避免默认导出
- 为复杂模块创建索引文件（`index.ts`）
- 避免循环依赖

```tsx
// ✅ 正确 - 组件命名导出
export interface ButtonProps {
  // ...
}

export function Button(props: ButtonProps) {
  // ...
}

// ✅ 正确 - index.ts
export * from './Button';
export * from './Input';
export * from './Select';

// ✅ 正确 - 多个命名导出
export { Button } from './Button';
export { Input } from './Input';
export { type ButtonProps, type InputProps } from './types';

// ❌ 错误 - 使用默认导出
export default function Button() {
  // ...
}

// ❌ 错误 - 混合导出
export default Button;
export { ButtonProps }; // 应统一使用命名导出
```

## 类型导出

【必须】分离类型和值导出：

```tsx
// ✅ 正确
export interface User {
  id: string;
  name: string;
}

export type UserRole = 'admin' | 'user' | 'guest';

export function createUser(userData: User): Promise<User> {
  // 实现
}
```

## 索引文件组织

【必须】按功能分组：

```tsx
// ✅ 正确 - components/index.ts
// UI 组件
export { Button } from './ui/Button';
export { Input } from './ui/Input';
export { Modal } from './ui/Modal';

// 布局组件
export { Header } from './layout/Header';
export { Footer } from './layout/Footer';

// 功能组件
export { UserProfile } from './features/UserProfile';
export { ProductList } from './features/ProductList';

// 类型导出
export type { ButtonProps } from './ui/Button';
export type { InputProps } from './ui/Input';
```

## 导入规范

【必须】按来源分组：

```tsx
// ✅ 正确 - 导入组织
// React 相关
import { useState, useEffect } from 'react';
import type { FC, ReactNode } from 'react';

// 第三方库
import { clsx } from 'clsx';
import { z } from 'zod';

// 内部模块
import { Button, Input } from '@/components/ui';
import { useAuth } from '@/hooks/useAuth';
import type { User, ApiResponse } from '@/types/api';

// 相对导入
import { validateForm } from '../utils/validation';
import type { FormData } from './types';
```

## 避免循环依赖

【必须】使用共享类型文件：

```tsx
// ✅ 正确 - 避免循环依赖

// types/shared.ts - 共享类型
export interface User {
  id: string;
  name: string;
}

// services/userService.ts
import type { User } from '../types/shared';

export function fetchUser(id: string): Promise<User> {
  // 实现
}

// components/UserCard.tsx
import type { User } from '../types/shared';
import { fetchUser } from '../services/userService';

export function UserCard({ userId }: { userId: string }) {
  // 实现
}
```

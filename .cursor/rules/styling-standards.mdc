---
description: 
globs: *.js,*.jsx,*.ts,*.tsx,*.css,*.less
alwaysApply: false
---
# 样式规范

## 核心原则

【必须】遵循：
- 优先使用 Tailwind CSS 原子类
- 使用 shadcn/ui 作为 UI 基础
- **严格遵循移动优先响应式设计**
- 支持暗模式和可访问性

## Tailwind CSS 使用

【必须】移动优先响应式设计：

```tsx
// ✅ 正确 - 移动优先响应式
<div className="
  flex flex-col gap-4 p-4
  sm:gap-6 sm:p-6
  md:flex-row md:gap-8 md:p-8
  lg:gap-12 lg:p-12
">
  <div className="w-full md:w-1/3 lg:w-1/4">
    {/* 侧边栏 */}
  </div>
  <div className="w-full md:w-2/3 lg:w-3/4">
    {/* 主内容 */}
  </div>
</div>

// ❌ 错误 - 混合内联样式
<div className="flex" style={{ padding: '1rem' }}>
  {/* 避免混合使用 */}
</div>

// ❌ 错误 - 桌面优先
<div className="flex-row lg:flex-col p-8 sm:p-4">
  {/* 应该从小到大设计 */}
</div>
```

## shadcn/ui 组件

【必须】使用 shadcn/ui 作为基础：

```tsx
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

// ✅ 正确 - shadcn/ui + Tailwind 微调
function UserCard({ user }: { user: User }) {
  return (
    <Card className="w-full md:w-96">
      <CardHeader>
        <CardTitle className="text-lg">{user.name}</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <Input 
          value={user.email} 
          readOnly 
          className="bg-muted"
        />
        <Button className="w-full">
          编辑用户
        </Button>
      </CardContent>
    </Card>
  );
}
```

## 设计系统基础

【必须】使用统一的设计令牌：

```tsx
// ✅ 正确 - 字体层级
<div className="space-y-6">
  <h1 className="text-4xl font-bold tracking-tight lg:text-5xl">
    主标题
  </h1>
  <h2 className="text-3xl font-semibold tracking-tight">
    次标题
  </h2>
  <h3 className="text-2xl font-semibold">
    三级标题
  </h3>
  <p className="text-base leading-7">
    正文内容
  </p>
  <p className="text-sm text-muted-foreground">
    辅助文本
  </p>
</div>

// ✅ 正确 - 间距系统
<div className="space-y-6">
  <section className="space-y-4">
    <h2 className="mb-2">标题</h2>
    <p className="mb-4">段落</p>
    <div className="flex gap-2">
      <Button>按钮1</Button>
      <Button>按钮2</Button>
    </div>
  </section>
</div>
```

## 状态和变体

【必须】统一状态表示：

```tsx
// ✅ 正确 - 按钮变体
<div className="flex flex-wrap gap-2">
  <Button variant="default">默认按钮</Button>
  <Button variant="outline">轮廓按钮</Button>
  <Button variant="destructive">危险按钮</Button>
  <Button variant="ghost">幽灵按钮</Button>
  <Button variant="secondary">次要按钮</Button>
</div>

// ✅ 正确 - 状态指示
<div className="space-y-2">
  {/* 加载状态 */}
  <Button disabled className="opacity-50">
    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
    加载中...
  </Button>
  
  {/* 成功状态 */}
  <div className="flex items-center gap-2 text-green-600 dark:text-green-400">
    <CheckCircle className="h-4 w-4" />
    操作成功
  </div>
  
  {/* 错误状态 */}
  <div className="flex items-center gap-2 text-red-600 dark:text-red-400">
    <AlertCircle className="h-4 w-4" />
    操作失败
  </div>
</div>
```

## 暗模式支持

【必须】使用设计系统颜色变量：

```tsx
// ✅ 正确 - 主题响应式颜色
<div className="bg-background text-foreground border border-border rounded-lg p-6">
  <h2 className="text-foreground mb-4">标题</h2>
  <p className="text-muted-foreground mb-4">
    描述文本
  </p>
  <Button className="bg-primary text-primary-foreground hover:bg-primary/90">
    主要操作
  </Button>
</div>

// ✅ 正确 - 手动暗模式类
<div className="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
  <p>自动适应主题的内容</p>
</div>
```

## 可访问性基础

【必须】确保基本可访问性：

```tsx
// ✅ 正确 - 焦点管理
<button className="
  px-4 py-2 rounded-md
  focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2
">
  可访问按钮
</button>

// ✅ 正确 - 语义化标记
<nav aria-label="主导航">
  <ul className="flex space-x-4">
    <li>
      <a 
        href="/home" 
        className="text-foreground hover:text-primary transition-colors"
        aria-current="page"
      >
        首页
      </a>
    </li>
  </ul>
</nav>

// ✅ 正确 - 屏幕阅读器支持
<button 
  aria-expanded={isOpen}
  aria-controls="dropdown-menu"
  className="flex items-center gap-2"
>
  菜单 <ChevronDown className="h-4 w-4" />
</button>
```

## 动画和过渡

【推荐】使用一致的过渡效果：

```tsx
// ✅ 正确 - 标准过渡
<div className="
  transition-all duration-200 ease-in-out
  hover:scale-105 hover:shadow-lg
  focus:scale-105 focus:shadow-lg
">
  交互卡片
</div>

// ✅ 正确 - 页面切换
<div className="animate-in fade-in-0 slide-in-from-bottom-2 duration-300">
  页面内容
</div>

// ✅ 正确 - 尊重用户偏好
<div className="
  motion-safe:transition-transform motion-safe:duration-300
  motion-reduce:transition-none
">
  尊重减少动画偏好
</div>
```

## 响应式布局 [P0]

【必须】移动优先网格系统：

```tsx
// ✅ 正确 - 响应式网格
<div className="
  grid grid-cols-1 gap-4 p-4
  sm:grid-cols-2 sm:gap-6 sm:p-6
  md:grid-cols-3 md:gap-8 md:p-8
  lg:grid-cols-4 lg:gap-12 lg:p-12
">
  {items.map(item => (
    <Card key={item.id} className="w-full">
      <CardContent className="p-4">
        <h3 className="text-lg font-semibold mb-2">{item.title}</h3>
        <p className="text-muted-foreground">{item.description}</p>
      </CardContent>
    </Card>
  ))}
</div>

// ✅ 正确 - 响应式容器
<main className="
  container mx-auto px-4 py-8
  sm:px-6 sm:py-12
  lg:px-8 lg:py-16
">
  {/* 页面内容 */}
</main>

// ✅ 正确 - 复杂响应式布局示例
<div className="min-h-screen bg-background">
  {/* 头部导航 */}
  <header className="
    sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur
    supports-[backdrop-filter]:bg-background/60
  ">
    <div className="container flex h-14 items-center">
      <div className="mr-4 hidden md:flex">
        <a className="mr-6 flex items-center space-x-2">
          <span className="hidden font-bold sm:inline-block">Brand</span>
        </a>
      </div>
      
      {/* 移动端菜单按钮 */}
      <button className="
        inline-flex items-center justify-center rounded-md p-2
        md:hidden
      ">
        <Menu className="h-4 w-4" />
      </button>
      
      {/* 桌面端导航 */}
      <nav className="hidden md:flex items-center space-x-6 text-sm font-medium">
        <a href="#" className="transition-colors hover:text-foreground/80">首页</a>
        <a href="#" className="transition-colors hover:text-foreground/80">产品</a>
        <a href="#" className="transition-colors hover:text-foreground/80">关于</a>
      </nav>
    </div>
  </header>

  {/* 主要内容区域 */}
  <div className="container mx-auto px-4 py-8">
    <div className="
      grid grid-cols-1 gap-6
      lg:grid-cols-4 lg:gap-8
    ">
      {/* 侧边栏 */}
      <aside className="
        order-2 lg:order-1 lg:col-span-1
        space-y-4
      ">
        <div className="sticky top-20">
          <h3 className="font-semibold mb-4">筛选</h3>
          <div className="space-y-3">
            {/* 筛选选项 */}
          </div>
        </div>
      </aside>

      {/* 主内容 */}
      <main className="
        order-1 lg:order-2 lg:col-span-3
      ">
        {/* 响应式卡片网格 */}
        <div className="
          grid grid-cols-1 gap-4
          sm:grid-cols-2 
          lg:grid-cols-2
          xl:grid-cols-3
        ">
          {products.map(product => (
            <Card key={product.id} className="
              overflow-hidden transition-shadow
              hover:shadow-lg
            ">
              <div className="aspect-square relative overflow-hidden">
                <img 
                  src={product.image} 
                  alt={product.name}
                  className="object-cover w-full h-full"
                />
              </div>
              <CardContent className="p-4">
                <h3 className="font-semibold line-clamp-2 mb-2">
                  {product.name}
                </h3>
                <p className="text-muted-foreground text-sm line-clamp-3 mb-4">
                  {product.description}
                </p>
                <div className="flex items-center justify-between">
                  <span className="font-bold text-lg">
                    ¥{product.price}
                  </span>
                  <Button size="sm">加入购物车</Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </main>
    </div>
  </div>

  {/* 页脚 */}
  <footer className="
    border-t bg-muted/50 py-8 mt-12
  ">
    <div className="container mx-auto px-4">
      <div className="
        grid grid-cols-2 gap-8
        md:grid-cols-4
      ">
        <div>
          <h4 className="font-semibold mb-4">公司</h4>
          <ul className="space-y-2 text-sm text-muted-foreground">
            <li><a href="#" className="hover:text-foreground">关于我们</a></li>
            <li><a href="#" className="hover:text-foreground">联系方式</a></li>
          </ul>
        </div>
        {/* 更多页脚列 */}
      </div>
    </div>
  </footer>
</div>
```

## 表单样式

【必须】统一表单元素样式：

```tsx
// ✅ 正确 - 表单布局
<form className="space-y-6 max-w-md mx-auto">
  <div className="space-y-2">
    <label htmlFor="name" className="text-sm font-medium">
      姓名
    </label>
    <Input 
      id="name"
      placeholder="请输入姓名"
      className="w-full"
    />
  </div>
  
  <div className="space-y-2">
    <label htmlFor="email" className="text-sm font-medium">
      邮箱
    </label>
    <Input 
      id="email"
      type="email"
      placeholder="请输入邮箱"
      className="w-full"
    />
  </div>
  
  <Button type="submit" className="w-full">
    提交
  </Button>
</form>
```

## 检查清单

开发时确认：

- [ ] **Tailwind 优先**：优先使用 Tailwind 原子类
- [ ] **移动优先**：从小屏开始设计，逐步增强
- [ ] **shadcn/ui**：使用 shadcn/ui 组件作为基础
- [ ] **设计系统**：使用统一的颜色、字体、间距
- [ ] **暗模式**：支持明暗主题切换
- [ ] **可访问性**：确保焦点管理和语义化标记
- [ ] **状态一致**：统一的状态表示和变体
- [ ] **响应式**：在所有设备上正常显示
- [ ] **性能**：合理使用动画和过渡效果

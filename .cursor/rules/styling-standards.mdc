---
description: 
globs: *.js,*.jsx,*.ts,*.tsx,*.css,*.less
alwaysApply: false
---
# 样式规范

## Tailwind CSS

【必须】遵循：
- 优先使用 Tailwind 原子类
- 复杂组件使用 `@apply` 指令
- **严格遵循移动优先响应式设计**
- 使用 Tailwind 断点系统：`sm:` `md:` `lg:` `xl:` `2xl:`

```tsx
// ✅ 正确 - 移动优先响应式
<div className="
  flex flex-col gap-4 p-4
  sm:gap-6 sm:p-6
  md:flex-row md:gap-8 md:p-8
  lg:gap-12 lg:p-12
  text-gray-800 dark:text-gray-200
">
  <div className="w-full md:w-1/3 lg:w-1/4">
    {/* 侧边栏 */}
  </div>
  <div className="w-full md:w-2/3 lg:w-3/4">
    {/* 主内容 */}
  </div>
</div>

// ❌ 错误 - 混合内联样式
<div className="flex" style={{ padding: '1rem', gap: '0.5rem' }}>
  {/* 内容 */}
</div>

// ❌ 错误 - 桌面优先
<div className="flex-row lg:flex-col p-8 sm:p-4">
  {/* 应该从小到大 */}
</div>
```

## shadcn/ui

【必须】遵循：
- 使用 shadcn/ui 作为 UI 基础
- 遵循组件文档，避免过度自定义
- 使用 Tailwind 微调组件

```tsx
// ✅ 正确
import { Button } from "@/components/ui/button";

function MyComponent() {
  return (
    <Button variant="outline" className="w-full md:w-auto">
      点击我
    </Button>
  );
}
```

## 主题和暗模式

【必须】遵循：
- 使用 `dark:` 前缀支持暗模式
- 颜色使用 CSS 变量，避免硬编码
- 遵循设计系统颜色和间距

## 响应式原则

【必须】遵循：
- **移动优先**：从小屏开始，逐步增强
- 确保所有设备可用性和可访问性
